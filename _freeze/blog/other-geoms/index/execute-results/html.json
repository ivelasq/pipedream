{
  "hash": "6b3047b6e50c39215d33bf6dea8c9c1a",
  "result": {
    "markdown": "---\ncategories: [\"visualize\"]\ndate: \"2021-03-28\"\ndescription: \"Let's explore some cool charts we can make in {ggplot2}.\"\ntitle: \"Exploring other ggplot2 geoms\"\nimage: thumbnail.jpg\n---\n\n![Vincent Van Gogh, Flower Beds in Holland (1883)](thumbnail-wide.jpg){fig-alt=\"A person working in fields of colorful tulips with houses in the background\"}\n\nR users are incredibly fortunate to work in an open-source community that creates and shares resources that make our work even better. The {ggplot2} package comes with incredibly useful geoms (geometric objects) to create visualizations. A full list of these can be found in the [reference documents](https://ggplot2.tidyverse.org/reference/) for {ggplot2}. These include:\n\n* `geom_bar` and `geom_col` for barcharts\n* `geom_histogram` for histograms\n* `geom_point` for scatterplots\n\nIn addition, other amazing folks in the R Community have created geoms that can be used with {ggplot2} and similarly use the tidyverse framework. This is fantastic for many reasons, but some include being able to add themes, facets, titles, and other components just like with any `ggplot`. Here are a few geoms that I've tried out with examples!\n\n* [Streamgraphs using ggstream::geom_stream](#streamgraphs)\n* [Ridgeline plots using ggridges::geom_density_ridges](#ridgeline-plots)\n* [Sankey diagrams using ggsankey::geom_sankey & ggalluvial::geom_alluvial](#sankey-diagrams)\n* [Bump charts using ggbump::geom_bump](#bump-charts)\n* [Waffle charts using waffle::geom_waffle](#waffle-charts)\n* [Beeswarm charts using ggbeeswarm::geom_beeswarm](#beeswarm-charts)\n* [Mosaic charts using ggmosaic::geom_mosaic](#mosaic-charts)\n\n<center>\n![](geoms.png){fig-alt=\"Waffle plot, steamgraph, density graph, beeswarm, and mosaic plot\"}\n</center>\n\n## Setup\n\nTo be able to run this code, be sure to have the tidyverse installed. The {wesanderson} package contains beautiful palettes for visualizations.\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\n\nlibrary(tidyverse)\nlibrary(wesanderson)\n```\n:::\n\n## Streamgraphs\n\nThis post includes three of David Sjöberg's amazing geoms; he created {ggsankey}, {ggstream}, AND {ggbump}. If you haven't seen his GitHub, please [check it out now](https://github.com/davidsjoberg).\n\nThis first geom, `geom_stream()`, creates a streamplot (which I've also seen called stream graphs). The streamplot is an area graph that usually centers around a central axis and allows us to see large fluctuations over time. More information on streamplot can be found [here](https://en.wikipedia.org/wiki/Streamgraph).\n\n{ggstream} also has other options available to customize the streamgraphs, such as creating an area chart. Check out the repo [here](https://github.com/davidsjoberg/ggstream).\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# remotes::install_github(\"davidsjoberg/ggstream\")\nlibrary(ggstream)\n\nggplot(blockbusters, aes(year, box_office, fill = genre)) +\n  geom_stream() +\n  scale_fill_manual(values = wes_palette(\"Darjeeling2\")) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n## Ridgeline plots\n\nThe {ggridges} package by Claus O. Wilke package also has a variety of geoms; check out the repo [here](https://github.com/wilkelab/ggridges). Ridgeline plots show the distribution of a numeric value for different groups and can look like mountain ranges. The [R-Ladies Seattle](https://www.meetup.com/rladies-seattle/) hex sticker was created using ridgelines (very appropriate for the mountainous Washington!).\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# install.packages(\"ggridges\")\nlibrary(ggridges)\n \nggplot(blockbusters, aes(x = box_office, y = genre, fill = genre)) +\n  geom_density_ridges(scale = 4) +\n  scale_fill_manual(values = wes_palette(\"Darjeeling2\")) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=672}\n:::\n:::\n\n## Sankey diagrams\n\nAnother geom by David Sjöberg is `geom_sankey()`, repo [here](https://github.com/davidsjoberg/ggsankey). This geom creates [Sankey diagrams](https://en.wikipedia.org/wiki/Sankey_diagram) and [alluvial plots](https://en.wikipedia.org/wiki/Alluvial_diagram), which show flow and transfers in a system or throughout time. These plots are VERY popular on the subreddit [dataisbeautiful](https://www.reddit.com/r/dataisbeautiful/) (check it out on Mondays to see some examples).\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# devtools::install_github(\"davidsjoberg/ggsankey\")\nlibrary(ggsankey)\n\nexample_dat <-\n  mtcars %>%\n  make_long(cyl, vs, am, gear, carb) # function in ggsankey to format data correctly\n\nggplot(example_dat,\n       aes(x = x, \n               next_x = next_x, \n               node = node, \n               next_node = next_node,\n               fill = factor(node))) +\n   geom_sankey(flow.alpha = .6) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){fig-align='center' width=672}\n:::\n:::\n\nAnother package for alluvial charts is {ggalluvial} by Jason Cory Brunson, with its repo [here](https://corybrunson.github.io/ggalluvial/). The data can be in more familiar formats than what is required for {ggsankey}.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# install.packages(\"ggalluvial\")\nlibrary(ggalluvial)\n\nggplot(as.data.frame(UCBAdmissions),\n       aes(y = Freq, axis1 = Gender, axis2 = Dept)) +\n  geom_alluvium(aes(fill = Admit), width = 1/12) +\n  scale_fill_manual(values = wes_palette(\"Darjeeling2\")) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){fig-align='center' width=672}\n:::\n:::\n\n## Bump charts\n\nOne last one by David Sjöberg is the amazing {ggbump}, repo [here](https://github.com/davidsjoberg/ggbump). Bump plots help show change in rank over time.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# devtools::install_github(\"davidsjoberg/ggbump\")\nlibrary(ggbump)\n\nblockbusters2 <-\n  blockbusters %>% \n  filter(genre %in% c(\"Action\", \"Comedy\", \"Drama\")) %>% \n  group_by(year) %>% \n  mutate(rank = rank(box_office))\n\nggplot(blockbusters2, aes(year, rank, color = genre)) +\n  geom_point(size = 7) +\n  geom_bump() +\n  scale_color_manual(values = wes_palette(\"Darjeeling2\")) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n## Waffle charts\n\nFor waffle charts, which are handy visualizations that show completion or parts of a whole, there is hrbrmstr's {waffle}. The repo is [here](https://github.com/hrbrmstr/waffle). Check out the ability to bring in other {ggplot2} functions, like `facet_wrap`. {waffle} also allows you to create pictograms using `geom_pictogram`, which replaces the squares in the 'waffle' with pictures.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# install.packages(\"waffle\", repos = \"https://cinc.rud.is\")\nlibrary(waffle)\n\nggplot(as_tibble(Titanic), aes(fill = Sex, values = n)) +\n  geom_waffle(n_rows = 20, color = \"white\") +\n  facet_wrap(~ Survived, ncol = 1)  +\n  scale_fill_manual(values = wes_palette(\"Darjeeling2\")) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){fig-align='center' width=672}\n:::\n:::\n\n## Beeswarm charts\n\nBeeswarm charts, similar to jitter plots in {ggplot2}, plot individual points showing distributions without allowing the points to overlap too much. Erik Clarke's repo for {ggbeeswarm} is [here](https://github.com/eclarke/ggbeeswarm).\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# install.packages(\"ggbeeswarm\")\nlibrary(ggbeeswarm)\n\nggplot(blockbusters, aes(x = genre, y = box_office, color = genre)) + \n  geom_quasirandom() +\n  theme_minimal() +\n  scale_color_manual(values = wes_palette(\"Darjeeling2\")) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){fig-align='center' width=672}\n:::\n:::\n\n## Mosaic charts\n\nMosaic charts are incredibly helpful when displaying proportions of (multiple) categories. The {ggmosaic} package by Haley Jeppson (repo [here](https://github.com/haleyjeppson/ggmosaic)) uses `geom_mosaic` to create these visualizations.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# devtools::install_github(\"haleyjeppson/ggmosaic\")\nlibrary(ggmosaic)\n\nggplot(as.data.frame(UCBAdmissions)) +\n  geom_mosaic(aes(x = product(Admit, Dept), fill = Gender, weight = Freq)) +\n  scale_fill_manual(values = wes_palette(\"Darjeeling2\")) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){fig-align='center' width=672}\n:::\n:::\n\n## Other geoms\n\nI know there exist a ton of other geoms that work with {ggplot2} out there. Just as I was writing this blogpost, I discovered {gghilbertstrings}! What other gg packages or geoms do you know of? Let me know on [Twitter](https://twitter.com/ivelasq3) and I'll list them here!\n\n<center>\n*Liked this post? I'd love for you to retweet!*\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">New post 🚀 Into the ggplot2niverse! 🚀 We love geom_point, geom_bar, and the built-in geoms in <a href=\"https://twitter.com/hashtag/ggplot2?src=hash&amp;ref_src=twsrc%5Etfw\">#ggplot2</a> but have you used <a href=\"https://twitter.com/hashtag/rstats?src=hash&amp;ref_src=twsrc%5Etfw\">#rstats</a> pkgs with other geoms that use the <a href=\"https://twitter.com/hashtag/tidyverse?src=hash&amp;ref_src=twsrc%5Etfw\">#tidyverse</a> like geom_sankey and geom_waffle? 🐝🧇 See them here &amp; let me know others <br>👉 <a href=\"https://t.co/orHyDMeVdd\">https://t.co/orHyDMeVdd</a> <a href=\"https://t.co/DxKUxIJI08\">pic.twitter.com/DxKUxIJI08</a></p>&mdash; Isabella Velásquez (@ivelasq3) <a href=\"https://twitter.com/ivelasq3/status/1376681492030558211?ref_src=twsrc%5Etfw\">March 29, 2021</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script> \n</center>",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": [],
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}