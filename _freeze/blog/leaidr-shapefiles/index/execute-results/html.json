{
  "hash": "8404b8a06391c1532f21664b5e728016",
  "result": {
    "markdown": "---\ncategories: [\"package\", \"map\"]\ndate: \"2020-05-03\"\ntitle: \"Introducing an R package for school district shapefiles\"\ndescription: \"The {leaidr} package helps us easily create maps of U.S. school districts.\"\nimage: thumbnail.jpg\n---\n\n![Abraham Mignon, Still Life with Flowers and a Watch (1660 - 1679)](thumbnail-wide.jpg){fig-alt=\"Colorful flowers in a pot with a black background\"}\n\nI would like to introduce [{leaidr}](https://github.com/ivelasq/leaidr), a package for mapping U.S. school district shapefiles!\n\nInspired by my coauthor [Joshua Rosenberg](https://joshuamrosenberg.com/), the goal of {leaidr} is to facilitate the download and use of school district shapefiles.\n\nSchool districts in the U.S. have associated local education agency identification numbers (LEAID) used in the [National Center for Education Statistics (NCES) Common Core of Data](https://nces.ed.gov/pubs2010/100largest0809/tables/table_d05.asp). These are very useful because if you have other datasets with NCES IDs, then you can (sometimes easily) join them.\n\nIt can be very useful to visualize districts and associated data. District shapefiles are available in different places, such as through the [NCES](https://nces.ed.gov/programs/edge/Geographic/DistrictBoundaries) and [Stanford Education Data Archive](https://exhibits.stanford.edu/data/catalog/db586ns4974). The package {tigris} also has a school district option, but unfortunately, it is missing a few district polygons.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tigris)\n\nca <- tigris::school_districts(state = \"06\",\n                               type = \"unified\")\n\nplot(ca[\"GEOID\"])\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){fig-align='center' fig-alt='Map of school districts from tigris, which is missing quite a few districts.' width=672}\n:::\n:::\n\n{leaidr} downloads NCES' U.S. district shapefile from Github using ROpenSci's [{piggyback}](https://github.com/ropensci/piggyback) package. This is a super helpful package, as Github caps file uploads at 100 MB (and the shapefile is ~170 MB). I originally tried Github Large File Storage (LFS), but it stores files as a hash, not as an actual file. Therefore, I couldn't figure out how to use it for a package that others can use.\n\nThe function `lea_get()` downloads an R Data file from the Github repo to your designated path and then writes the necessary shapefiles. Then, create an object with `lea_prep()` by designating where the shapefiles exist and which state(s) you would like. **Note:** For now, you must use the state's FIPS code. FIPS state codes are numeric and two-letter alphabetic codes to identify U.S. states and certain other associated areas. A reference table is found [here](https://www.mcc.co.mercer.pa.us/dps/state_fips_code_listing.htm).\n\nOnce you have the shapefile, then you can merge with other datasets and plot using packages like {leaflet} and {ggplot2}.\n\n## Example of creating a school district map\n\nLet's walk through an example where we will merge external data to the shapefile and then map all the districts in California. The external data is from Josh's [`covidedu` project](https://github.com/making-data-science-count/covidedu), which scrapes district websites for specific words. In this case, the search terms were \"covid\\*\", \"coron\\*\", and \"closure\". I highly recommend using `covidedu` for easy scraping from a **lot** of district websites!\n\nFirst, let's call our packages.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n# if you haven't installed the package yet\n# devtools::install_github(\"ivelasq/leaidr\")\nlibrary(leaidr)\nlibrary(maptools)\n# if you don't have this downloaded\n# install.packages(\"mapproj\")\n```\n:::\n\nTime to get your data! Use {leaidr} to download and prep your shapefiles for California (FIPS == 06). Read in the external data (in this case, `summary-of-table-of-links.csv`).\n\n:::{.callout-note}\nYou must have a GitHub PAT set to run `lea_get()`. [Happy git with R](https://happygitwithr.com/github-pat.html) has a great walkthrough on how to get one if you do not have it already.\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# download the shapefile into a designated folder\nleaidr::lea_get(path = \"./test\")\n\n# prep the shapefile for the state(s) you'd like\nca_shapefile <-\n  leaidr::lea_prep(path = \"./test\", fips = \"06\")\n\n# read in the external data that also has NCES ID's\n# this is from the covidedu project\nca_data <-\n  read_csv(\"https://raw.githubusercontent.com/making-data-science-count/covidedu/master/output/2020-04-29/summary-of-table-of-links.csv\")\n```\n:::\n\nJoin the CSV to the shapefile.\n\n::: {.cell}\n\n```{.r .cell-code}\nca_merge <-\n  sp::merge(ca_shapefile, ca_data, by.x = \"GEOID\", by.y = \"nces_id\")\n```\n:::\n\nNow 'fortify' the data - this converts the polygons into points. This is so that ggplot can create the plot.\n\nIf you get the error `isTRUE(gpclibPermitStatus()) is not TRUE`, then you need to enable `gpclib` by running `gpclibPermit()` (this is part of the {maptools} package, which should have been loaded above). Note that support for `gpclib` will be withdrawn from maptools at the next major release, so you might have to try something else if the package has been upgraded.\n\nIf you run `gpclibPermit()` and you keep getting `FALSE`, then you are missing the package {gpclib}. Install the package, then run `gpclibPermit()` to set it to `TRUE`.\n\n(I don't know if this is the best/only way to do this - if anybody has suggestions, please let me know!)\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"gpclib\")\ngpclibPermit()\nca_points <- fortify(ca_merge, region = \"GEOID\")\n```\n:::\n\nNow, join the points and the shapefile data.\n\n::: {.cell}\n\n```{.r .cell-code}\nca_df <- left_join(ca_merge@data, ca_points, by = c(\"GEOID\" = \"id\"))\n```\n:::\n\nWe can finally plot the shapefile and its data!\n\n::: {.cell}\n\n```{.r .cell-code}\nca_map <-\n  ca_df %>% \n  ggplot() +\n  geom_polygon(aes(x = long, \n                   y = lat, \n                   group = group,\n                   fill = any_link_found),\n               color = \"gray\", \n               size = .2) +\n  theme_void() +\n  scale_fill_iv() +\n  ggtitle(\"COVID-Related Links Found on CA School District Sites\")\n```\n:::\n\nTo make a nicer looking map, then you can use `coord_map()`.\n\n::: {.cell}\n\n```{.r .cell-code}\nmap_projected <- ca_map +\n  coord_map()\n\nprint(map_projected)\n```\n:::\n\n![](test_map.png){fig-alt=\"Map of California school districts showing whether or not they contained COVID-related links on their website\"}\n\nTada! A full school district map for California.\n\n## Call for collaboration\n\nPlease try out {leaidr}! I hope that it is useful to you in your work. I'd love any collaborators to join me in making it easier/better!\n\n* **Other functionality**: For example: being able to filter shapefiles by NCES IDs as well as states; adding commonly used data (like district demographics).\n* **Issues**: If you run into any issues, please post on the [GitHub page!](https://github.com/ivelasq/leaidr/issues)\n\n## Resources\n\n* [**Joining Spatial Data**](http://www.nickeubank.com/wp-content/uploads/2015/10/RGIS2_MergingSpatialData_part1_Joins.html)\n* [**Analyzing U.S. Census Data Using R**](https://rpubs.com/DanielSLee/censusMap)\n\n<center>\n*Liked this post? I'd love for you to retweet!*\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Ever wish you could easily create U.S. school district maps üó∫üè´ in <a href=\"https://twitter.com/hashtag/rstats?src=hash&amp;ref_src=twsrc%5Etfw\">#rstats</a>? Check out {leaidr}, which downloads the shapefile from GitHub using <a href=\"https://twitter.com/rOpenSci?ref_src=twsrc%5Etfw\">@rOpenSci</a> &#39;s {piggyback} üê∑! Would love any thoughts on how to improve! Repo: <a href=\"https://t.co/yOszd4agYM\">https://t.co/yOszd4agYM</a> Tutorial: <a href=\"https://t.co/JuqGQcVR7Z\">https://t.co/JuqGQcVR7Z</a></p>&mdash; Isabella Vel√°squez (@ivelasq3) <a href=\"https://twitter.com/ivelasq3/status/1259831120364888066?ref_src=twsrc%5Etfw\">May 11, 2020</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script> \n</center>",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": [],
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}